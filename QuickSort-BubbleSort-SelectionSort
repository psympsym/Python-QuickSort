# arr为待排序数组，reverse为排序方式，True为降序，False为升序
def quick_sort(arr, reverse):
    # 只有一个数据，返回
    if len(arr) < 2:
        return arr
    left = []  # 左子序列
    right = []  # 右子序列
    # 选取基准值
    pivot = arr[0]
    if reverse:
        # 递减序列
        for i in arr[1:]:
            if i >= pivot:
                left.append(i)
            else:
                right.append(i)
    else:
        # 递增序列
        for i in arr[1:]:
            if i <= pivot:
                left.append(i)
            else:
                right.append(i)
    arr = quick_sort(left, reverse)
    arr.append(pivot)
    arr.extend(quick_sort(right, reverse))
    return arr


# 冒泡排序
def bubble_sort(arr, reverse=False):
    n = len(arr)
    for i in range(n):
        for j in range(n - i - 1):
            if reverse:
                if arr[j] < arr[j + 1]:
                    arr[j], arr[j + 1] = arr[j + 1], arr[j]
            else:
                if arr[j] > arr[j + 1]:
                    arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr


# 选择排序
def selection_sort(arr, reverse=False):
    n = len(arr)
    for i in range(n):
        min_idx = i
        for j in range(i + 1, n):
            if reverse:
                if arr[j] > arr[min_idx]:
                    min_idx = j
            else:
                if arr[j] < arr[min_idx]:
                    min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]
    return arr
